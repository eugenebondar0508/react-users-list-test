{"version":3,"sources":["api/api.tsx","components/NewUserAddForm/NewUserAddForm.tsx","components/ReadOnlyRow/ReadOnlyRow.tsx","components/UsersList/UserList.tsx","components/EditableRow/EditableRow.tsx","components/CurrentUser/CurrentUser.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["API_URL","getUsers","fetch","then","response","json","deleteUser","userId","method","NewUserAddForm","users","setUsers","useState","first_name","last_name","birth_date","gender","job","biography","is_active","addFormDate","setAddFormDate","handleAddFormChange","event","preventDefault","fieldName","target","getAttribute","fieldValue","value","newFormDate","onSubmit","id","headers","body","JSON","stringify","addUser","length","htmlFor","required","type","name","onChange","ReadOnlyRow","user","setUserId","Fragment","onClick","UserList","loadUser","className","map","EditableRow","editFormDate","handleEditFormChange","handleEditFormSubmit","CurrentUser","setUser","editUserId","setEditUserId","setEditFormDate","useEffect","getUserById","userFromServer","editedUser","catch","error","console","log","editUser","formValues","handleEditClick","App","selectedUserById","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5681f3c0.chunk.js","sourcesContent":["import { User } from \"../interfaces/user\";\r\n\r\nconst API_URL = 'https://frontend-candidate.dev.sdh.com.ua/v1/contact/'\r\n\r\nexport const getUsers = () => {\r\n  return (\r\n    fetch(API_URL)\r\n      .then(response => response.json())\r\n  );\r\n};\r\n\r\nexport function deleteUser(userId: number | undefined) {\r\n  return fetch(`${API_URL}${userId}`, {\r\n    method: 'DELETE',\r\n  });\r\n}\r\n\r\nexport function addUser({\r\n  first_name, \r\n  last_name, \r\n  birth_date, \r\n  gender,\r\n  job, \r\n  biography, \r\n  is_active, \r\n  id }: Partial<User>): Promise<User> {\r\n  return fetch('https://frontend-candidate.dev.sdh.com.ua/v1/contact/', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-type': 'application/json; charset=utf-8',\r\n    },\r\n    body: JSON.stringify({\r\n      first_name, last_name, birth_date, gender, job, biography, is_active, id\r\n    })\r\n  })\r\n    .then(response => response.json());\r\n}\r\n\r\nexport function getUserById(userId: number) {\r\n  return fetch(`${API_URL}${userId}`)\r\n    .then(response => response.json())\r\n}\r\n\r\nexport function editUser({\r\n  first_name, \r\n  last_name, \r\n  birth_date, \r\n  gender,\r\n  job, \r\n  biography, \r\n  is_active, \r\n  id }: Partial<User>, userId: number | undefined) {\r\n    return fetch(`${API_URL}${userId}`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Accept':'application/json',\r\n        'Content-type': 'application/json',\r\n      },\r\n      body:JSON.stringify({\r\n        first_name, last_name, birth_date, gender, job, biography, is_active, id\r\n      }) \r\n  }).then(response => response.json())\r\n    .catch(error => console.log(error))\r\n}","import React, { useState } from 'react';\r\n\r\nimport { User } from '../../interfaces/user';\r\nimport { addUser, getUsers } from '../../api/api';\r\n\r\n\r\ntype Props = {\r\n  users: User[];\r\n  setUsers: (users: User[]) => void;\r\n}\r\n\r\nconst NewUserAddForm: React.FC<Props> = ({ users, setUsers}) => {\r\n\r\n  const [addFormDate, setAddFormDate] = useState({\r\n    first_name: '',\r\n    last_name: '',\r\n    birth_date: '',\r\n    gender: 'male',\r\n    job: '',\r\n    biography: '',\r\n    is_active: false,\r\n  })\r\n\r\n  const handleAddFormChange = (event: any) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute('name');\r\n    const fieldValue = event.target.value;\r\n\r\n\r\n    const newFormDate: any = { ...addFormDate };\r\n    newFormDate[fieldName] = fieldValue;\r\n\r\n    setAddFormDate(newFormDate);\r\n  }\r\n\r\n  const handleAddFormSubmit = (event: any) => {\r\n    event.preventDefault();\r\n\r\n    const newUser = {\r\n      id: users.length + 1,\r\n      first_name: addFormDate.first_name,\r\n      last_name: addFormDate.last_name,\r\n      birth_date: addFormDate.birth_date,\r\n      gender: addFormDate.gender,\r\n      job: addFormDate.job,\r\n      biography: addFormDate.biography,\r\n      is_active: addFormDate.is_active,\r\n    };\r\n\r\n\r\n    addUser(newUser).then(() => {\r\n      getUsers()\r\n      .then(setUsers);\r\n    })\r\n\r\n    return {\r\n      first_name: '',\r\n      last_name: '',\r\n      birth_date: '',\r\n      gender: 'male',\r\n      job: '',\r\n      biography: '',\r\n      is_active: false,\r\n    }\r\n    \r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2>Add a user </h2>\r\n      <form onSubmit={handleAddFormSubmit}>\r\n        <label htmlFor=\"name\">First Name</label>\r\n        <input \r\n          required\r\n          type=\"text\" \r\n          name=\"first_name\"\r\n          id=\"name\" \r\n          onChange={handleAddFormChange}\r\n        />\r\n\r\n        <label htmlFor=\"lastName\">Last Name</label>\r\n        <input\r\n          required \r\n          type=\"text\" \r\n          id=\"lastName\" \r\n          name=\"last_name\"\r\n          onChange={handleAddFormChange}\r\n        />\r\n\r\n        <label htmlFor=\"date\">Birth date: </label>\r\n        <input \r\n          type=\"date\" \r\n          id=\"date\"  \r\n          name=\"birth_date\"\r\n          required\r\n          onChange={handleAddFormChange}\r\n        />\r\n\r\n        <label htmlFor=\"sex\">Gender:</label>\r\n        <select id=\"sex\" name=\"gender\" onChange={handleAddFormChange}>\r\n          <option value=\"male\">male</option>\r\n          <option value=\"female\">female</option>\r\n        </select>\r\n\r\n        <label htmlFor=\"job\">Job</label>\r\n        <input \r\n          type=\"text\" \r\n          required \r\n          name=\"job\" \r\n          id=\"job\" \r\n          onChange={handleAddFormChange}\r\n        />\r\n\r\n        <label htmlFor=\"biography\">Biography</label>\r\n        <input \r\n          type=\"text\" \r\n          required \r\n          id=\"biography\" \r\n          name=\"biography\" \r\n          onChange={handleAddFormChange}\r\n        />\r\n\r\n        <input \r\n          type=\"checkbox\" \r\n          id=\"is_active\" \r\n          name=\"is_active\" \r\n          onChange={handleAddFormChange}\r\n        />\r\n        <label htmlFor=\"is_active\">Is active</label>\r\n\r\n        <button type=\"submit\">\r\n          Send\r\n        </button>\r\n      </form>\r\n    \r\n    </>\r\n  )\r\n\r\n}\r\n\r\nexport default NewUserAddForm\r\n","import React from 'react'\r\nimport { User } from '../../interfaces/user'\r\ntype Props = {\r\n  user: User;\r\n  deleteUser: (userId: number) => void;\r\n  setUserId: (userId: number) => void;\r\n}\r\n\r\nconst ReadOnlyRow: React.FC<Props> = ({ user, setUserId, deleteUser }) => {\r\n  return (\r\n    <React.Fragment key={user.id}>\r\n      <tr onClick={() => setUserId(user.id)}>\r\n        <th>{user.first_name}</th>\r\n        <th>{user.last_name}</th>\r\n        <th>{user.birth_date}</th>\r\n        <th>{user.biography}</th>\r\n        <th>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => deleteUser(user.id)}\r\n          >\r\n            Delete\r\n          </button>\r\n          </th>\r\n        </tr>\r\n      </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ReadOnlyRow\r\n","import React from 'react';\r\nimport { deleteUser } from '../../api/api';\r\nimport { User } from '../../interfaces/user';\r\nimport ReadOnlyRow from '../ReadOnlyRow/ReadOnlyRow';\r\n\r\n\r\ntype Props = {\r\n  users: User[];\r\n  setUserId: (userId: number) => void;\r\n  loadUser: () => void;\r\n}\r\n\r\nconst UserList: React.FC<Props> = ({ users, setUserId, loadUser }) => {\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    <div className=\"App\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Last Name</th>\r\n            <th>Birthday</th>\r\n            <th>Biography</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.map(user => (\r\n            <React.Fragment key={user.id}>\r\n            <ReadOnlyRow\r\n              user={user}\r\n              deleteUser={(userId: number) => {\r\n                deleteUser(userId)\r\n                  .then(loadUser);\r\n              } }\r\n              setUserId={setUserId} />\r\n            </React.Fragment>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    </>\r\n  );\r\n  \r\n}\r\n\r\nexport default UserList\r\n\r\n","import React from 'react'\r\n\r\n\r\ntype Props = {\r\n  editFormDate: any;\r\n  handleEditFormChange: (event: any) => void;\r\n  handleEditFormSubmit: (event: any) => void; \r\n}\r\n\r\nexport const EditableRow: React.FC<Props> = ({ editFormDate, handleEditFormChange, handleEditFormSubmit }) => {\r\n\r\n  return (\r\n    <form onSubmit={handleEditFormSubmit}>\r\n      <h2>Edit the user</h2>\r\n      <label htmlFor=\"name\">First Name</label>\r\n      <input\r\n        required\r\n        type=\"text\"\r\n        name=\"first_name\"\r\n        id=\"name\"\r\n        onChange={handleEditFormChange}\r\n        value={editFormDate.first_name}\r\n      />\r\n      <label htmlFor=\"lastName\">Last Name</label>\r\n      <input\r\n        required\r\n        type=\"text\"\r\n        id=\"lastName\"\r\n        name=\"last_name\"\r\n        onChange={handleEditFormChange}\r\n        value={editFormDate.last_name}\r\n      />\r\n      <label htmlFor=\"date\">Birth date: </label>\r\n      <input\r\n        type=\"date\"\r\n        id=\"date\"\r\n        name=\"birth_date\"\r\n        required\r\n        onChange={handleEditFormChange}\r\n        value={editFormDate.birth_date}\r\n      />\r\n      <label htmlFor=\"sex\">Gender:</label>\r\n      <select id=\"sex\" name=\"gender\" onChange={handleEditFormChange} value={editFormDate.gender}>\r\n        <option value=\"male\">male</option>\r\n        <option value=\"female\">female</option>\r\n      </select>\r\n      <label htmlFor=\"job\">Job</label>\r\n      <input\r\n        type=\"text\"\r\n        required\r\n        name=\"job\"\r\n        id=\"job\" \r\n        onChange={handleEditFormChange}\r\n        value={editFormDate.job}\r\n      />\r\n      <label htmlFor=\"biography\">Biography</label>\r\n      <input\r\n        type=\"text\"\r\n        required\r\n        id=\"biography\"\r\n        name=\"biography\" \r\n        onChange={handleEditFormChange}\r\n        value={editFormDate.biography}\r\n      />\r\n      <input\r\n        type=\"checkbox\"\r\n        id=\"is_active\"\r\n        name=\"is_active\"\r\n        onChange={handleEditFormChange}\r\n        value={editFormDate.is_active}\r\n      />\r\n      <label htmlFor=\"is_active\">Is active</label>\r\n      <button type=\"submit\">Save</button>\r\n      </form>\r\n\r\n  )\r\n}\r\n\r\nexport default EditableRow\r\n","import React, { useEffect, useState } from 'react'\r\nimport { getUserById, editUser, getUsers } from '../../api/api'\r\nimport { User } from '../../interfaces/user'\r\nimport EditableRow from '../EditableRow/EditableRow'\r\n\r\n\r\ntype Props = {\r\n  userId: number ;\r\n  deleteUser: (userId: number | undefined) => void;\r\n  users: User[];\r\n  setUsers: (users: User[]) => void;\r\n}\r\nexport const CurrentUser:React.FC<Props> = ({ userId, deleteUser, users, setUsers }) => {\r\n \r\n  const [user, setUser] = useState<User>();\r\n\r\n\r\n  const [editUserId, setEditUserId] = useState(0);\r\n\r\n  const [editFormDate, setEditFormDate] = useState({\r\n    first_name: '',\r\n    last_name: '',\r\n    birth_date: '',\r\n    gender: 'male',\r\n    job: '',\r\n    biography: '',\r\n    is_active: false,\r\n  })\r\n\r\n  const handleEditFormChange = (event: any) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute('name');\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormDate: any = { ...editFormDate };\r\n    newFormDate[fieldName] = fieldValue;\r\n\r\n    setEditFormDate(newFormDate)\r\n  }\r\n\r\n  const handleEditClick = (event: any, user: any) => {\r\n    event.preventDefault();\r\n    setEditUserId(user.id)\r\n\r\n    const formValues = {\r\n      first_name: user.first_name,\r\n      last_name: user.last_name,\r\n      birth_date: user.birth_date,\r\n      gender: user.gender,\r\n      job: user.job,\r\n      biography: user.biography,\r\n      is_active: user.is_active,\r\n    }\r\n\r\n    setEditFormDate(formValues)\r\n  }\r\n\r\n  const handleEditFormSubmit = (event: any) => {\r\n    event.preventDefault();\r\n\r\n    const editedUser = {\r\n      id: editUserId,\r\n      first_name: editFormDate.first_name,\r\n      last_name: editFormDate.last_name,\r\n      birth_date: editFormDate.birth_date,\r\n      gender: editFormDate.gender,\r\n      job: editFormDate.job,\r\n      biography: editFormDate.biography,\r\n      is_active: editFormDate.is_active,\r\n    }\r\n\r\n    const index = editedUser.id;\r\n\r\n\r\n    editUser(editedUser, index).then(() => {\r\n      getUsers()\r\n      .then(setUsers);\r\n    })\r\n\r\n  }\r\n \r\n  useEffect(() => {\r\n    getUserById(userId)\r\n      .then(userFromServer => {\r\n        setUser(userFromServer);\r\n      });\r\n }, [userId]);\r\n \r\n  return (\r\n    <>\r\n      { editUserId === user?.id ?  <EditableRow editFormDate={editFormDate} handleEditFormChange={handleEditFormChange} handleEditFormSubmit={handleEditFormSubmit}/> : \r\n      <>\r\n        <h2>{user?.first_name} {' '} {user?.last_name}</h2>\r\n        <p>\r\n          {user?.biography}\r\n          {' '}\r\n          {user?.birth_date}\r\n          {' '}\r\n          {user?.job}\r\n          {' '}\r\n          {user?.gender}\r\n          {' '}\r\n          {user?.is_active}\r\n        <button\r\n          type=\"button\"\r\n          onClick={(event) => handleEditClick(event, user)}\r\n        >Edit</button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => deleteUser(user?.id)}\r\n        >\r\n          Delete\r\n        </button>\r\n        </p>\r\n      </>\r\n      }\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CurrentUser\r\n","import React from 'react';\nimport './App.css';\nimport NewUserAddForm from './components/NewUserAddForm/NewUserAddForm';\nimport UserList from './components/UsersList/UserList';\nimport { useEffect, useState } from 'react';\nimport { deleteUser, getUsers } from './api/api';\n\nimport { User } from './interfaces/user'\nimport CurrentUser from './components/CurrentUser/CurrentUser';\n\nconst App: React.FC = () => {\n\n  const [users, setUsers] = useState<User[]>([]);\n  const [selectedUserById, setUserId] = useState(0)\n\n  const loadUser = () => {\n    getUsers()\n    .then(setUsers);\n  }\n\n  useEffect(loadUser, [])\n  return (\n    <>\n      <UserList \n        users={users}\n        setUserId={setUserId}\n        loadUser={loadUser}\n      />\n      <NewUserAddForm \n        users={users} \n        setUsers={setUsers}\n      />\n\n        <CurrentUser \n          userId={selectedUserById}\n          deleteUser={(userId: number | undefined) => {\n            deleteUser(userId)\n              .then(loadUser)\n          }}\n          users={users}\n          setUsers={setUsers}\n        />\n    </>\n  )\n};\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}